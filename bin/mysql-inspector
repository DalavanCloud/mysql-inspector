#!/usr/bin/env ruby

require 'optparse'
require "lib/mysql-inspector"

options = {
  :databases => [],
  :versions => [],
  :base_dir => ".",
  :diff => false,
  :grep => false,
  :dump => false,
  :clean => false
}

OptionParser.new do |opts|
  opts.banner = "Usage: ????"

  opts.on("-c", "--current [db]") do |db_name|
    options[:versions] << "current"
    options[:databases] << db_name
  end

  opts.on("-t", "--target [db]") do |db_name|
    options[:versions] << "target"
    options[:databases] << db_name
  end

  opts.on("-w", "--write") do |yes|
    options[:dump] = true
  end

  opts.on("-f", "--force") do |ok|
    options[:clean] = true
  end

  opts.on("-g", "--grep foo_id,bar_id") do |columns|
    options[:grep] = columns.split(",").collect { |c| c.strip }
  end

  opts.on("-d", "--diff") do |info|
    options[:diff] = true
  end

end.parse!

options[:versions].compact!
options[:databases].compact!

options[:versions].collect! do |version|
  MysqlInspector::Dump.new(version, options[:base_dir])
end

if options[:clean]
  options[:versions].each { |v| v.clean! }
end

if options[:dump]
  raise "Missing database names" unless options[:versions].size == options[:databases].size
  options[:versions].zip(options[:databases]).each do |v, d|
    v.dump!(d)
  end
end

if options[:grep]
  options[:versions].each do |v|
    grep = MysqlInspector::Grep.new(v)
    grep.find(STDOUT, *options[:grep])
  end
end

if options[:diff]
  inputs = ["current", "target"].collect { |version| MysqlInspector::Dump.new(version, options[:base_dir]) }
  comparison = MysqlInspector::Comparison.new(*inputs)
  comparison.compare(STDOUT)
end
